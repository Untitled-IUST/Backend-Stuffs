# Generated by Django 4.2 on 2023-05-04 17:46

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Customer', '0002_customer_credit'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Barber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BarberShop', models.CharField(max_length=255, unique=True)),
                ('Owner', models.CharField(max_length=255)),
                ('Parvaneh', models.CharField(max_length=10, unique=True)),
                ('phone_Number', models.CharField(max_length=11, null=True, unique=True)),
                ('area', models.CharField(choices=[('Tehranpars', 'Tehranpars'), ('Nazi Abad', 'Nazi Abad'), ('Narmak', 'Narmak'), ('Tajrish', 'Tajrish'), ('Gheytariye', 'Gheytariye'), ('Marzdaran', 'Marzdaran'), ('Janat Abad', 'Janat Abad'), ('Vanak', 'Vanak'), ('Enghelab', 'Enghelab'), ('Valiasr', 'Valiasr'), ('Saadat Abad', 'Saadat Abad'), ('Piroozi', 'Piroozi'), ('Jordan', 'Jordan')], max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('rate', models.FloatField(default=1)),
                ('background', models.ImageField(default='default_profile.png', upload_to='Barber/backg')),
                ('logo', models.ImageField(default='default_profile.png', upload_to='Barber/Logo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('hair', 'hair'), ('skin', 'skin'), ('makeup', 'makeup'), ('nail', 'nail')], max_length=20)),
                ('barber', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='Barber.barber')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(blank=True, max_length=255)),
                ('price', models.FloatField(default=0)),
                ('servicePic', models.ImageField(default='default_profile.png', null=True, upload_to='Barber/Service')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categoryServices', to='Barber.category')),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField()),
                ('barbershop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='barbers', to='Barber.barber')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('barber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Barber.barber')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors_comments', to='Customer.customer')),
                ('parent_comment', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='Barber.comment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('barber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='Barber.barber')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors_ratings', to='Customer.customer')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('barber', 'customer')},
            },
        ),
        migrations.CreateModel(
            name='OrderServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField()),
                ('date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('ordering', 'ordering'), ('ordered', 'ordered'), ('confirmed', 'confirmed'), ('paid', 'paid')], default='ordering', max_length=9)),
                ('barber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barber', to='Barber.barber')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to='Customer.customer')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='Barber.categoryservice')),
            ],
            options={
                'unique_together': {('barber', 'time', 'date')},
            },
        ),
    ]
