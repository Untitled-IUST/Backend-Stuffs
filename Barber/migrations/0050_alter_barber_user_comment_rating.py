# Generated by Django 4.2 on 2023-04-26 17:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Customer', '0017_alter_customer_user'),
        ('Barber', '0049_rename_service_pic_service_servicepic_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='barber',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('barber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Barber.barber')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors_comments', to='Customer.customer')),
                ('parent_comment', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='Barber.comment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('barber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='Barber.barber')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors_ratings', to='Customer.customer')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('barber', 'customer')},
            },
        ),
    ]
